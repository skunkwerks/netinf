#!/usr/bin/env ruby

#
# pubni -- PUBLISH NetInf objects over HTTP
#
# This is the NI URI library developed as
# part of the SAIL project. (http://sail-project.eu)
#
# Specification(s) - note, versions may change::
# * http://tools.ietf.org/html/farrell-decade-ni-00
# * http://tools.ietf.org/html/draft-hallambaker-decade-ni-params-00
#
# Author:: Dirk Kutscher <kutscher@neclab.eu>
# Copyright:: Copyright (c) 2012 Dirk Kutscher <kutscher@neclab.eu>
# Specification:: http://tools.ietf.org/html/draft-farrell-decade-ni-00
#
# License:: http://www.apache.org/licenses/LICENSE-2.0.html
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

$: << File.dirname(__FILE__)

require 'httpcl'
require 'niutils'
require 'getoptlong'
require 'net/http'
require 'tempfile'

authority=nil
file=nil
web=nil
loc=nil
digestAlgo=:"sha-256"           # default


def printUsage
  print "Usage: pubni -f <filename> [-a <authority>] [-l <FQDN>] -- publish NI file over HTTP\n"
  print "       pubni -w <uri> [-a <authority>] [-l <FQDN>] -- publish NI file over HTTP\n"
  print "       pubni -h -- print usage info\n"
end


opts = GetoptLong.new(
                      ['--help', '-h', GetoptLong::NO_ARGUMENT ],
                      ['--file', '-f', GetoptLong::REQUIRED_ARGUMENT ],
                      ['--web', '-w', GetoptLong::REQUIRED_ARGUMENT ],
                      ['--authority', '-a', GetoptLong::REQUIRED_ARGUMENT ],
                      ['--loc', '-l', GetoptLong::REQUIRED_ARGUMENT ]
)



opts.each do |opt, arg|
  case opt
  when "--help"
    printUsage
    exit 0
  when "--file"
    file=arg
  when "--web"
    web=arg
  when "--authority"
    authority=arg
  when "--loc"
    loc=arg
  end
end


if !loc
  printUsage()
  exit 1
end



if ((not file) and (not web)) or (file and web)
  printUsage
  exit -1
else if web
       tmp=Tempfile.new('pubni')
       tmp.write(Net::HTTP.get(URI(web)))
       tmp.close(false)
       file=tmp.path
     end
end

niUri=hashFromFile(file, authority, digestAlgo)


nhttp=NetInfHTTP.new

msgId=Time.new.strftime("%Y%m%d%H%M%S")
res=nhttp.publishObj(niUri, file, loc, msgId)
print "Result: #{res}\n"
print "Result: #{res.header}\n"
print "Result: #{res.body}\n"




