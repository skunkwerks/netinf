#!/usr/bin/env ruby

#
# regni -- PUBLISH NetInf registrations over HTTP
#
# This is the NI URI library developed as
# part of the SAIL project. (http://sail-project.eu)
#
# Specification(s) - note, versions may change::
# * http://tools.ietf.org/html/farrell-decade-ni
# * http://tools.ietf.org/html/draft-hallambaker-decade-ni-params
#
# Author:: Dirk Kutscher <kutscher@neclab.eu>
# Copyright:: Copyright (c) 2012 Dirk Kutscher <kutscher@neclab.eu>
#
# License:: http://www.apache.org/licenses/LICENSE-2.0.html
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

$: << File.dirname(__FILE__)

require 'httpcl'
require 'niutils'
require 'getoptlong'
require 'net/http'
require 'tempfile'

loc=nil
niUri=nil
locList=nil


def printUsage
  print "Usage: pubni -n <name> -u <loclist> -l <FQDN> -- publish NI file over HTTP\n"
  print "       pubni -h -- print usage info\n"
end


opts = GetoptLong.new(
                      ['--help', '-h', GetoptLong::NO_ARGUMENT ],
                      ['--ni', '-n', GetoptLong::REQUIRED_ARGUMENT ],
                      ['--uris', '-u', GetoptLong::REQUIRED_ARGUMENT ],
                      ['--loc', '-l', GetoptLong::REQUIRED_ARGUMENT ]
)



opts.each do |opt, arg|
  case opt
  when "--help"
    printUsage
    exit 0
  when "--ni"
    niUri=arg
  when "--uris"
    locList=arg
  when "--loc"
    loc=arg
  end
end


if !loc || !niUri || !locList
  printUsage()
  exit 1
end

locs=locList.split(%r{,\s*})

if locs.length<1
  printUsage()
  exit 1
end


nhttp=NetInfHTTP.new

msgId=Time.new.strftime("%Y%m%d%H%M%S")
res=nhttp.publishLoc(niUri, locs, loc, msgId)
print "Result: #{res}\n"
if res.code!=200
  print res.body
end




